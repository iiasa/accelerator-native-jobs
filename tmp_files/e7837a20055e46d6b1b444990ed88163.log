Downloading file to validate.
File download complete
Data: {'region': 'gcm', 'year': '2017', 'scenario': 'baseline', 'value': '12.40235806', 'variable': 'popt', 'item': 'tot', 'unit': 'million', 'model': 'magnet'}
Temporary downloaded file deleted
Traceback (most recent call last):
  File "/app/acc_native_jobs/__init__.py", line 42, in wrapper_func
    func(*args, **kwargs)
  File "/app/acc_native_jobs/__init__.py", line 65, in verify_csv_regional_timeseries
    csv_regional_timeseries_verification_service()
  File "/app/acc_native_jobs/validate_csv_regional_timeseries.py", line 282, in __call__
    self.create_validated_file()
  File "/app/acc_native_jobs/validate_csv_regional_timeseries.py", line 258, in create_validated_file
    for row in validated_rows:
  File "/app/acc_native_jobs/validate_csv_regional_timeseries.py", line 223, in get_validated_rows
    raise err
  File "/app/acc_native_jobs/validate_csv_regional_timeseries.py", line 220, in get_validated_rows
    row = self.validate_row_data(row)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/acc_native_jobs/validate_csv_regional_timeseries.py", line 155, in validate_row_data
    raise ValueError(f"'{row[key]}' must be one of {map_documents.keys()}" )
ValueError: 'gcm' must be one of dict_keys(['abw', 'afg', 'ago', 'aia', 'alb', 'ame', 'and', 'ant', 'anz', 'are', 'arg', 'arm', 'atg', 'aus', 'aut', 'aze', 'bdi', 'bel', 'ben', 'bfa', 'bgd', 'bgr', 'bhr', 'bhs', 'bih', 'blr', 'blz', 'bmu', 'bol', 'bra', 'brb', 'brn', 'btn', 'bwa', 'caf', 'can', 'che', 'chl', 'chn', 'civ', 'cmr', 'cod', 'cog', 'cok', 'col', 'com', 'cpv', 'cri', 'cub', 'cym', 'cyp', 'cze', 'deu', 'dji', 'dma', 'dnk', 'dom', 'dza', 'ecu', 'egy', 'eri', 'esh', 'esp', 'est', 'eth', 'eue', 'eur', 'fin', 'fji', 'flk', 'fra', 'fsm', 'fsu', 'gab', 'gbr', 'geo', 'ggy', 'gha', 'gib', 'gin', 'glp', 'gmb', 'gnb', 'gnq', 'grc', 'grd', 'grl', 'gtm', 'guf', 'guy', 'hkg', 'hnd', 'hrv', 'hti', 'hun', 'idn', 'imn', 'ind', 'irl', 'irn', 'irq', 'isl', 'isr', 'ita', 'jam', 'jey', 'jor', 'jpn', 'kaz', 'ken', 'kgz', 'khm', 'kir', 'kna', 'kor', 'kwt', 'lao', 'lbn', 'lbr', 'lby', 'lca', 'lie', 'lka', 'lso', 'ltu', 'lux', 'lva', 'mac', 'mar', 'mco', 'mda', 'mdg', 'mdv', 'men', 'mex', 'mhl', 'mkd', 'mli', 'mlt', 'mmr', 'mne', 'mng', 'moz', 'mrt', 'msr', 'mus', 'mwi', 'mys', 'nam', 'ncl', 'ner', 'nga', 'nic', 'niu', 'nld', 'nor', 'npl', 'nru', 'nzl', 'oam', 'oas', 'omn', 'osa', 'pak', 'pan', 'per', 'phl', 'plw', 'png', 'pol', 'pri', 'prk', 'prt', 'pry', 'pse', 'pyf', 'qat', 'reu', 'rou', 'rus', 'rwa', 'sas', 'sau', 'sdn', 'sea', 'sen', 'sgp', 'sjm', 'slb', 'sle', 'slv', 'smr', 'som', 'srb', 'ssa', 'stp', 'sur', 'svk', 'svn', 'swe', 'swz', 'syc', 'syr', 'tca', 'tcd', 'tgo', 'tha', 'tjk', 'tkl', 'tkm', 'tls', 'ton', 'tto', 'tun', 'tur', 'tuv', 'twn', 'tza', 'uga', 'ukr', 'ury', 'usa', 'uzb', 'vat', 'vct', 'ven', 'vgb', 'vir', 'vnm', 'vut', 'wld', 'wsm', 'yem', 'zaf', 'zmb', 'zwe'])
